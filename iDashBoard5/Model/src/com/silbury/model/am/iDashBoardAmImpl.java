package com.silbury.model.am;

import com.silbury.model.Employee;
import com.silbury.model.am.common.iDashBoardAm;
import com.silbury.model.evo.EmpValuesInserEOViewImpl;
import com.silbury.model.evo.EmployeesEO_VIEWImpl;
import com.silbury.model.views.EmployeesViewImpl;
import com.silbury.model.vo.DepartVOImpl;
import com.silbury.model.vo.EmployeeVOImpl;

import java.awt.Container;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.JboException;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.SequenceImpl;

import java.math.BigDecimal;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 28 17:23:32 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class iDashBoardAmImpl extends ApplicationModuleImpl implements iDashBoardAm {
    /**
     * This is the default constructor (do not remove).
     */
    public iDashBoardAmImpl() {
    }

    /**
     * Container's getter for DepartVO.
     * @return DepartVO
     */
    public ViewObjectImpl getDepartVO() {
        return (ViewObjectImpl) findViewObject("DepartVO");
    }

    /**
     * Container's getter for EmployeeVO.
     * @return EmployeeVO
     */
    public EmployeeVOImpl getEmployeeVO() {
        return (EmployeeVOImpl) findViewObject("EmployeeVO");
    }
    
    public  ArrayList getEmployeesList(){
        ArrayList empList = null;
        int empId =0; String firstName= null; String lastName= null; String title= null; int deptId= 0; String deptName= null;
                            String phone= null; String mobile= null; String email= null; String linkedIn= null; String twitter= null; String facebook= null;
                            String google= null; String address= null; String city= null; String state= null; String country= null; String postal= null; int rating=0;
                            int potential=0; int compRatio=0; double salary=0.0; double bonus=0.0; double commission=0.0; int mgrId=0;
                            Date hireDate=null; String mgrFirstName= null; String mgrLastName= null;
        try {
           ViewObjectImpl vo = this.getEmployeeVO();
            if(empList == null){
                empList = new ArrayList();
            }
            System.out.println(vo.getName());
            vo.setWhereClause("1=1");
            System.out.println(this.getEmployeeVO().getQuery());
            //this.executeQuery();
            Row[] emps = this.getEmployeeVO().getAllRowsInRange(); 
            for (Row empy : emps) { 
                if(empy.getAttribute("EmployeeId")!=null){
                   empId =  Integer.parseInt(empy.getAttribute("EmployeeId").toString());
                }
                if(empy.getAttribute("FirstName")!=null){
                    firstName = empy.getAttribute("FirstName").toString();
                }
                if(empy.getAttribute("LastName")!=null){
                   lastName = empy.getAttribute("LastName").toString();
                }
                if(empy.getAttribute("JobTitle")!=null){
                   title = empy.getAttribute("JobTitle").toString();
                }
                if(empy.getAttribute("DepartmentId")!=null){
                   deptId = Integer.parseInt(empy.getAttribute("DepartmentId").toString());
                }
                if(empy.getAttribute("DepartmentName")!=null){
                   deptName = empy.getAttribute("DepartmentName").toString();
                }
                if(empy.getAttribute("PhoneNumber")!=null){
                   phone =  empy.getAttribute("PhoneNumber").toString();
                }
                if(empy.getAttribute("PhoneNumber1")!=null){
                   mobile = empy.getAttribute("PhoneNumber1").toString();
                }
                if(empy.getAttribute("Email")!=null){
                   email = empy.getAttribute("Email").toString();
                }
                if(empy.getAttribute("Linkedin")!=null){
                    linkedIn =  empy.getAttribute("Linkedin").toString();
                }
                if(empy.getAttribute("Twitter")!=null){
                   twitter =  empy.getAttribute("Twitter").toString();
                }
                if(empy.getAttribute("Facebook")!=null){
                   facebook=  empy.getAttribute("Facebook").toString();
                }
                if(empy.getAttribute("Google")!=null){
                   google = empy.getAttribute("Google").toString();
                }
                if(empy.getAttribute("StreetAddress")!=null){
                    address =  empy.getAttribute("StreetAddress").toString();
                }
                if(empy.getAttribute("City")!=null){
                   city =  empy.getAttribute("City").toString();
                }                
                if(empy.getAttribute("StateProvince")!=null){
                   state = empy.getAttribute("StateProvince").toString();
                }             
                if(empy.getAttribute("CountryName")!=null){
                   country = empy.getAttribute("CountryName").toString();
                }
                if(empy.getAttribute("PostalCode")!=null){
                   postal = empy.getAttribute("PostalCode").toString();
                }
                if(empy.getAttribute("Rating")!=null){
                   rating = Integer.parseInt(empy.getAttribute("Rating").toString());
                }
                if(empy.getAttribute("Potential")!=null){
                  potential  = Integer.parseInt(empy.getAttribute("RatiPotentialng").toString());
                }
                if(empy.getAttribute("Compratio")!=null){
                  compRatio  = Integer.parseInt(empy.getAttribute("Compratio").toString());
                }
                if(empy.getAttribute("Salary")!=null){
                 salary = Integer.parseInt(empy.getAttribute("Salary").toString());
                }
                if(empy.getAttribute("Bouns")!=null){
                  bonus  = Integer.parseInt(empy.getAttribute("Bouns").toString());
                }
                if(empy.getAttribute("CommissionPct")!=null){
                  commission  = Integer.parseInt(empy.getAttribute("CommissionPct").toString());
                }
                if(empy.getAttribute("ManagerId")!=null){
                  mgrId  = Integer.parseInt(empy.getAttribute("ManagerId").toString());
                }
                if(empy.getAttribute("HireDate")!=null){
                   SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
                   hireDate = sdf.parse(empy.getAttribute("HireDate").toString());
                }
                if(empy.getAttribute("MgrFirstNm")!=null){
                   mgrFirstName = empy.getAttribute("MgrFirstNm").toString();
                }
                if(empy.getAttribute("MgrLastNm")!=null){
                   mgrLastName = empy.getAttribute("MgrLastNm").toString();
                }
                
                empList.add(new Employee(empId,  firstName,  lastName,  title,  deptId,  deptName,
                             phone,  mobile,  email,  linkedIn,  twitter,  facebook,
                             google,  address,  city,  state,  country,  postal,  rating,
                             potential,  compRatio,  salary,  bonus,  commission,  mgrId,
                             hireDate,  mgrFirstName,  mgrLastName));
            }
                
            
       } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        return empList;
    }

    /**
     * Container's getter for EmployeesView1.
     * @return EmployeesView1
     */
    public EmployeesViewImpl getEmployeesView1() {
        return (EmployeesViewImpl) findViewObject("EmployeesView1");
    }

    /**
     * Container's getter for EmployeesView2.
     * @return EmployeesView2
     */
    public EmployeesViewImpl getEmployeesView2() {
        return (EmployeesViewImpl) findViewObject("EmployeesView2");
    }

    /**
     * Container's getter for EmpManagerFkLink1.
     * @return EmpManagerFkLink1
     */
    public ViewLinkImpl getEmpManagerFkLink1() {
        return (ViewLinkImpl) findViewLink("EmpManagerFkLink1");
    }
    
    /**
         * Container's getter for RegionsView.
         * @return RegionsView
         */
        public ViewObjectImpl getRegionsView() {
            return (ViewObjectImpl) findViewObject("RegionsView");
        }

        /**
         * Container's getter for CountriesView.
         * @return CountriesView
         */
        public ViewObjectImpl getCountriesView() {
            return (ViewObjectImpl) findViewObject("CountriesView");
        }

        /**
         * Container's getter for LocationsView.
         * @return LocationsView
         */
        public ViewObjectImpl getLocationsView() {
            return (ViewObjectImpl) findViewObject("LocationsView");
        }

        /**
         * Container's getter for DepartmentsView.
         * @return DepartmentsView
         */
        public ViewObjectImpl getDepartmentsView() {
            return (ViewObjectImpl) findViewObject("DepartmentsView");
        }

        /**
         * Container's getter for EmployeesView.
         * @return EmployeesView
         */
        public ViewObjectImpl getEmployeesView() {
            return (ViewObjectImpl) findViewObject("EmployeesView");
        }

        /**
         * Container's getter for JobHistoryView.
         * @return JobHistoryView
         */
        public ViewObjectImpl getJobHistoryView() {
            return (ViewObjectImpl) findViewObject("JobHistoryView");
        }

        /**
         * Container's getter for EmployeesEO_VIEW.
         * @return EmployeesEO_VIEW
         */
        public EmployeesEO_VIEWImpl getEmployeesEO_VIEW() {
            return (EmployeesEO_VIEWImpl) findViewObject("EmployeesEO_VIEW");
        }

        /**
         * Container's getter for EmployeesEO_Up_V1.
         * @return EmployeesEO_Up_V1
         */
        public ViewObjectImpl getEmployeesEO_Up_V1() {
            return (ViewObjectImpl) findViewObject("EmployeesEO_Up_V1");
        }


    /**
     * Container's getter for CountrRegFkLink.
     * @return CountrRegFkLink
     */
        public ViewLinkImpl getCountrRegFkLink() {
            return (ViewLinkImpl) findViewLink("CountrRegFkLink");
        }

        /**
         * Container's getter for LocCIdFkLink.
         * @return LocCIdFkLink
         */
        public ViewLinkImpl getLocCIdFkLink() {
            return (ViewLinkImpl) findViewLink("LocCIdFkLink");
        }

        /**
         * Container's getter for DeptLocFkLink.
         * @return DeptLocFkLink
         */
        public ViewLinkImpl getDeptLocFkLink() {
            return (ViewLinkImpl) findViewLink("DeptLocFkLink");
        }

        /**
         * Container's getter for EmpDeptFkLink.
         * @return EmpDeptFkLink
         */
        public ViewLinkImpl getEmpDeptFkLink() {
            return (ViewLinkImpl) findViewLink("EmpDeptFkLink");
        }

        /**
         * Container's getter for JhistEmpFkLink.
         * @return JhistEmpFkLink
         */
        public ViewLinkImpl getJhistEmpFkLink() {
            return (ViewLinkImpl) findViewLink("JhistEmpFkLink");
        }

    /**
     * Container's getter for DepartmentsEO22View1.
     * @return DepartmentsEO22View1
     */
        public ViewObjectImpl getDepartmentsEO22View1() {
            return (ViewObjectImpl) findViewObject("DepartmentsEO22View1");
        }


        /**
         * Container's getter for EmployeesEO22View3.
         * @return EmployeesEO22View3
         */
        public ViewObjectImpl getEmployeesEO22View3() {
            return (ViewObjectImpl) findViewObject("EmployeesEO22View3");
        }


        /**
         * Container's getter for EmpDeptFkAssoc1Link1.
         * @return EmpDeptFkAssoc1Link1
         */
        public ViewLinkImpl getEmpDeptFkAssoc1Link1() {
            return (ViewLinkImpl) findViewLink("EmpDeptFkAssoc1Link1");
        }

        /**
         * Container's getter for PageDropDownLOV1.
         * @return PageDropDownLOV1
         */
        public ViewObjectImpl getPageDropDownLOV1() {
            return (ViewObjectImpl) findViewObject("PageDropDownLOV1");
        }
    
    /**
     *
     * @param region
     * @param country
     * @param location
     */
 
    
    public void executeSearchVo(String region, String country, String location) {

           ViewObjectImpl vo = this.getDepartments_EVO1();

           //For Region
           if (!region.isEmpty() && (country.isEmpty() && location.isEmpty())) {
               vo.setWhereClause("DepartmentsEO22.LOCATION_ID IN (SELECT LOCATION_ID FROM DEPARTMENTS where LOCATION_ID IN (select LOCATION_ID from LOCATIONS where COUNTRY_ID IN (select COUNTRY_ID from COUNTRIES where REGION_ID = " +
                                 region + ")))");
           }

           //for country
           if (!country.isEmpty() && (region.isEmpty() && location.isEmpty())) {
               vo.setWhereClause("DepartmentsEO22.LOCATION_ID IN (SELECT LOCATION_ID FROM DEPARTMENTS where LOCATION_ID IN (select LOCATION_ID from LOCATIONS where COUNTRY_ID = '" +
                                 country + "'))");
           }

           //for location
           if (!location.isEmpty() && (region.isEmpty() && country.isEmpty())) {
               vo.setWhereClause("DepartmentsEO22.LOCATION_ID =" + location + " ");
           }

           vo.executeQuery();

       }

    /**
     * Container's getter for LocationsEO22View1.
     * @return LocationsEO22View1
     */
    public ViewObjectImpl getLocationsEO22View1() {
        return (ViewObjectImpl) findViewObject("LocationsEO22View1");
    }

    /**
     * Container's getter for LocationsEO22View2.
     * @return LocationsEO22View2
     */
    public ViewObjectImpl getLocationsEO22View2() {
        return (ViewObjectImpl) findViewObject("LocationsEO22View2");
    }

    /**
     * Container's getter for DepartmentsEO22View2.
     * @return DepartmentsEO22View2
     */
    public ViewObjectImpl getDepartmentsEO22View2() {
        return (ViewObjectImpl) findViewObject("DepartmentsEO22View2");
    }

    /**
     * Container's getter for LocDeptFkLink22.
     * @return LocDeptFkLink22
     */
    public ViewLinkImpl getLocDeptFkLink22() {
        return (ViewLinkImpl) findViewLink("LocDeptFkLink22");
    }


    /**
     * Container's getter for Departments_EVO1.
     * @return Departments_EVO1
     */
    public ViewObjectImpl getDepartments_EVO1() {
        return (ViewObjectImpl) findViewObject("Departments_EVO1");
    }

    /**
     * Container's getter for Employees_EVO1.
     * @return Employees_EVO1
     */
    public ViewObjectImpl getEmployees_EVO1() {
        return (ViewObjectImpl) findViewObject("Employees_EVO1");
    }

    /**
     * Container's getter for Dep_Emp_EVO_ViewLink1.
     * @return Dep_Emp_EVO_ViewLink1
     */
    public ViewLinkImpl getDep_Emp_EVO_ViewLink1() {
        return (ViewLinkImpl) findViewLink("Dep_Emp_EVO_ViewLink1");
    }

    /**
     * Container's getter for Employees_EVO_LOV1.
     * @return Employees_EVO_LOV1
     */
    public ViewObjectImpl getEmployees_EVO_LOV1() {
        return (ViewObjectImpl) findViewObject("Employees_EVO_LOV1");
    }

    /**
     * Container's getter for Location_LOV1.
     * @return Location_LOV1
     */
    public ViewObjectImpl getLocation_LOV1() {
        return (ViewObjectImpl) findViewObject("Location_LOV1");
    }

    /**
     * Container's getter for Department_LOV1.
     * @return Department_LOV1
     */
    public ViewObjectImpl getDepartment_LOV1() {
        return (ViewObjectImpl) findViewObject("Department_LOV1");
    }

    /**
     * Container's getter for Manager_LOV1.
     * @return Manager_LOV1
     */
    public ViewObjectImpl getManager_LOV1() {
        return (ViewObjectImpl) findViewObject("Manager_LOV1");
    }
    
    public void callDel(String empId){
        
        try{
            CallableStatement callableStatement = this.getDBTransaction().createCallableStatement("begin ? := DEL_EMP(?); end;",0);
            callableStatement.registerOutParameter(1, Types.VARCHAR);
            callableStatement.setString(2, empId);
            
            callableStatement.execute();
            
            this.getDBTransaction().commit();


        }catch(Exception ew){
            ew.printStackTrace();
        }
    }

    /**
     * Container's getter for ManagerListVO1.
     * @return ManagerListVO1
     */
    public ViewObjectImpl getManagerListVO1() {
        return (ViewObjectImpl) findViewObject("ManagerListVO1");
    }

    /**
     * Container's getter for EmpValuesInserEOView1.
     * @return EmpValuesInserEOView1
     */
    public EmpValuesInserEOViewImpl getEmpValuesInserEOView1() {
        return (EmpValuesInserEOViewImpl) findViewObject("EmpValuesInserEOView1");
    }


    /**
     * Container's getter for JobsView1.
     * @return JobsView1
     */
    public ViewObjectImpl getJobsView1() {
        return (ViewObjectImpl) findViewObject("JobsView1");
    }


    /**
     * Container's getter for DepartmentsEO22View5.
     * @return DepartmentsEO22View5
     */
    public ViewObjectImpl getDepartmentsEO22View5() {
        return (ViewObjectImpl) findViewObject("DepartmentsEO22View5");
    }


    /**
     * Container's getter for DepartmentsView2.
     * @return DepartmentsView2
     */
    public ViewObjectImpl getDepartmentsView2() {
        return (ViewObjectImpl) findViewObject("DepartmentsView2");
    }


    /**
     * Container's getter for EmployeesEO22View2.
     * @return EmployeesEO22View2
     */
    public ViewObjectImpl getEmployeesEO22View2() {
        return (ViewObjectImpl) findViewObject("EmployeesEO22View2");
    }


    /**
     * Container's getter for EmployeesEO_VIEW2.
     * @return EmployeesEO_VIEW2
     */
    public EmployeesEO_VIEWImpl getEmployeesEO_VIEW2() {
        return (EmployeesEO_VIEWImpl) findViewObject("EmployeesEO_VIEW2");
    }


    /**
     * Container's getter for EmployeesView4.
     * @return EmployeesView4
     */
    public ViewObjectImpl getEmployeesView4() {
        return (ViewObjectImpl) findViewObject("EmployeesView4");
    }


    /**
     * Container's getter for DepListVO1.
     * @return DepListVO1
     */
    public ViewObjectImpl getDepListVO1() {
        return (ViewObjectImpl) findViewObject("DepListVO1");
    }

    /**
     * Container's getter for JobsListVO1.
     * @return JobsListVO1
     */
    public ViewObjectImpl getJobsListVO1() {
        return (ViewObjectImpl) findViewObject("JobsListVO1");
    }

    /**
     * Container's getter for EmployeeUploadVO1.
     * @return EmployeeUploadVO1
     */
    public ViewObjectImpl getEmployeeUploadVO1() {
        return (ViewObjectImpl) findViewObject("EmployeeUploadVO1");
    }

    /**
     * Container's getter for BubbleGraphVO1.
     * @return BubbleGraphVO1
     */
    public ViewObjectImpl getBubbleGraphVO1() {
        return (ViewObjectImpl) findViewObject("BubbleGraphVO1");
    }

    /**
     * Container's getter for DashBoardVO1.
     * @return DashBoardVO1
     */
    public ViewObjectImpl getDashBoardVO1() {
        return (ViewObjectImpl) findViewObject("DashBoardVO1");
    }

    /**
     * Container's getter for DepartmentLatLongView1.
     * @return DepartmentLatLongView1
     */
    public ViewObjectImpl getDepartmentLatLongView1() {
        return (ViewObjectImpl) findViewObject("DepartmentLatLongView1");
    }
     /** Container's getter for AssignedTasksVO1.
     * @return AssignedTasksVO1
     */
    public ViewObjectImpl getAssignedTasksVO1() {
        return (ViewObjectImpl) findViewObject("AssignedTasksVO1");
    }

    /**
     * Container's getter for CompletedTaskVO1.
     * @return CompletedTaskVO1
     */
    public ViewObjectImpl getCompletedTaskVO1() {
        return (ViewObjectImpl) findViewObject("CompletedTaskVO1");
    }
    
    ///// ---- Start of Methods for Workflow Processes ----
        /**Method to Execute DB Update SQL Query using DBTransaction
        * @param query
        * @return
        */
        public void updateQuery(String query) {
            try {
                System.out.println("Query : " + query);
                ResultSet rs;
                Integer result = null;
                result = getDBTransaction().createStatement(0).executeUpdate(query);
                System.out.println("Sql query executed Successfully ::::" + result);
                this.getDBTransaction().commit();
                refreshWfWidget();
        
            } catch (SQLException e) {
                throw new JboException(e);
            }
        }
        
        /**Method to Execute DB Select SQL Query using DBTransaction
            * @param query
            * @return
            */
           public void selectQuery(String query) {
               try {
                   ResultSet rs;
                   Integer code = null;
                   rs = getDBTransaction().createStatement(0).executeQuery(query);
                   if (rs.next()) {
                       code = ((BigDecimal) rs.getObject(1)).intValue();
                   }
                    System.out.println("Select query result : " + code );
                   rs.close();
               } catch (SQLException e) {
                   throw new JboException(e);
               }
           }
        
        /**Method to Execute DB insert SQL Query using DBTransaction
        * @param query
        * @return
        */
        public void insertQuery(String taskName) {
            try {
                String query;
                Number seqNo = getNextSequenceVal();
                ResultSet rs;
                Integer result = null;
                
                query ="insert into sil_task values("+seqNo+",'"+taskName+"','','ApprovalWorkflow',sysdate,'Workflow','Contributor')";
                result = getDBTransaction().createStatement(0).executeUpdate(query);
                System.out.println("Sql query sil_workflow executed Successfully ::::" + query);
                System.out.println("Sql query sil_task executed Successfully ::::" + result);
                
                query ="insert into sil_workflow values("+seqNo+",sysdate,'Manager','Bob',null,50,'ApprovalWorkflow','Create','Entry')";
                result = getDBTransaction().createStatement(0).executeUpdate(query);
                System.out.println("Sql query sil_workflow executed Successfully ::::" + query);
                System.out.println("Sql query sil_workflow executed Successfully ::::" + result);
                this.getDBTransaction().commit();
                refreshWfWidget();
            } catch (SQLException e) {
                throw new JboException(e);
            }
        }  
        /** Method to refresh workflow widget view
         * */
        public void refreshWfWidget(){
            ViewObject vo = getAssignedTasksVO1();
            vo.executeQuery();
            ViewObject voAppr = getCompletedTaskVO1();
            voAppr.executeQuery();
            ViewObject voDash = getDashBoardVO1();
            voDash.executeQuery();
        }
        
        /**
         * To get the Sequence Value
         * @return SequeceNumber
         */
        protected Number getNextSequenceVal(){        
            SequenceImpl s = new SequenceImpl("taskId_seq", getDBTransaction());
            return s.getSequenceNumber();    
        } 
    ///// ---- End of Methods for Workflow Processes ----

    /**
     * Container's getter for CreateTaskFormVO1.
     * @return CreateTaskFormVO1
     */
    public ViewObjectImpl getCreateTaskFormVO1() {
        return (ViewObjectImpl) findViewObject("CreateTaskFormVO1");
    }

    /**
     * Container's getter for EmpUploadVO_1.
     * @return EmpUploadVO_1
     */
    public ViewObjectImpl getEmpUploadVO_1() {
        return (ViewObjectImpl) findViewObject("EmpUploadVO_1");
    }

    /**
     * Container's getter for AveSalaryDept1.
     * @return AveSalaryDept1
     */
    public ViewObjectImpl getAveSalaryDept1() {
        return (ViewObjectImpl) findViewObject("AveSalaryDept1");
    }

    /**
     * Container's getter for DepartmentDetailsVO1.
     * @return DepartmentDetailsVO1
     */
    public ViewObjectImpl getDepartmentDetailsVO1() {
        return (ViewObjectImpl) findViewObject("DepartmentDetailsVO1");
    }

    /**
     * Container's getter for DepartmentDetailsVO2.
     * @return DepartmentDetailsVO2
     */
    public ViewObjectImpl getDepartmentDetailsVO2() {
        return (ViewObjectImpl) findViewObject("DepartmentDetailsVO2");
    }

    /**
     * Container's getter for AveSalaryDeptVO1.
     * @return AveSalaryDeptVO1
     */
    public ViewObjectImpl getAveSalaryDeptVO1() {
        return (ViewObjectImpl) findViewObject("AveSalaryDeptVO1");
    }

    /**
     * Container's getter for DeptEmpMasterDetailVL.
     * @return DeptEmpMasterDetailVL
     */
    public ViewLinkImpl getDeptEmpMasterDetailVL() {
        return (ViewLinkImpl) findViewLink("DeptEmpMasterDetailVL");
    }

    /**
     * Container's getter for DepartmentMastersVO1.
     * @return DepartmentMastersVO1
     */
    public ViewObjectImpl getDepartmentMastersVO1() {
        return (ViewObjectImpl) findViewObject("DepartmentMastersVO1");
    }

    /**
     * Container's getter for SearchVO1.
     * @return SearchVO1
     */
    public ViewObjectImpl getSearchVO1() {
        return (ViewObjectImpl) findViewObject("SearchVO1");
    }
}

